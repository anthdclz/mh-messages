{"version":3,"sources":["components/message/message.component.jsx","components/message/message.utils.js","components/chat-button/chat-button.component.jsx","pages/chat-page/chat-page.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["MessageComponent","content","senderUuid","sentAt","index","deleteMessage","d","Date","sentAtDisplayString","getDay","getMonth","getDate","getFullYear","toString","substring","className","onClick","ChatButtonComponent","displayText","handleClick","ChatPage","newList","state","chatList","setState","toggleSort","sortType","sortedList","sort","a","b","da","db","getTime","isSorted","addNextPage","nextEntry","length","originalList","chat","dedupedList","listUniques","Set","messageObject","msg","JSON","stringify","uuid","has","add","push","this","sortText","id","slice","map","messageProps","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ghHAmBeA,EAfU,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cACrDC,EAAI,IAAIC,KAAKJ,GACbK,EAAmB,UCNP,SAACJ,GAEnB,MADa,CAAE,SAAU,SAAU,UAAW,YAAa,WAAY,UAC3DA,GDImBK,CAAOH,EAAEG,UAAf,aCFL,SAACL,GAErB,MADe,CAAE,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,YACtGA,GDAwCM,CAASJ,EAAEI,YAAxC,YAAuDJ,EAAEK,UAAzD,aAAuEL,EAAEM,cAAzE,eAA6FN,EAAEO,WAAWC,UAAU,KAC7I,OACI,sBAAKC,UAAU,UAAf,UACI,uBAAMA,UAAU,kBAAhB,UACCb,EADD,KACeD,EAAQ,uBADvB,IAC8B,qBAAKc,UAAU,kBAAf,SAAkCP,OAEhE,sBAAMO,UAAU,gBAAgBC,QAAS,kBAAMX,EAAcD,IAA7D,wBEDGa,G,MARa,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YACvC,OACI,sBAAMJ,UAAU,cAAcC,QAAS,kBAAMG,KAA7C,SACKD,MC4EEE,G,wDA1EX,aAAc,IAAD,8BACT,gBAQJf,cAAgB,SAACD,GACb,IAAMiB,EAAU,EAAKC,MAAMC,gBACpBF,EAAQjB,GACf,EAAKoB,SAAS,CACVD,SAAUF,KAbL,EAgBbI,WAAa,WACT,MAA6B,EAAKH,MAA3BI,EAAP,EAAOA,SAEDC,EAFN,EAAiBJ,SAEWK,MAAK,SAACC,EAAGC,GACjC,IAAMC,EAAK,IAAIxB,KAAKsB,EAAE1B,QAChB6B,EAAK,IAAIzB,KAAKuB,EAAE3B,QACtB,MAAoB,SAAbuB,EAAsBK,EAAGE,UAAUD,EAAGC,UAAYD,EAAGC,UAAUF,EAAGE,aAG7E,EAAKT,SAAS,CACVD,SAAUI,EACVO,UAAU,EACVR,SAAuB,SAAbA,EAAsB,MAAQ,UA5BnC,EA+BbS,YAAc,WACV,MAA+B,EAAKb,MAA5BC,EAAR,EAAQA,SAAUa,EAAlB,EAAkBA,UACdA,EAAYb,EAASc,QACrB,EAAKb,SAAS,CACVY,UAAWA,EAAY,KAjC/B,EAAKd,MAAQ,CACTC,SAAU,GACVW,UAAU,EACVR,SAAU,MACVU,UAAW,GANN,E,qDAuCb,WAEI,IAFe,EAETE,EAAeC,IACfC,EAAc,GACdC,EAAc,IAAIC,IAJT,cAKaJ,GALb,IAKf,2BAA0C,CAAC,IAAhCK,EAA+B,QAClCC,EAAMC,KAAKC,UAAU,CAACC,KAAMJ,EAAcI,KAAM9C,QAAS0C,EAAc1C,UACvEwC,EAAYO,IAAIJ,KAChBH,EAAYQ,IAAIL,GAChBJ,EAAYU,KAAKP,KATV,8BAYfQ,KAAK3B,SAAS,CACVD,SAAUiB,M,oBAGlB,WAAS,IAAD,OACJ,EAAoDW,KAAK7B,MAAjDC,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,SAAUR,EAA5B,EAA4BA,SAAUU,EAAtC,EAAsCA,UAChCgB,EAAYlB,EAAiC,SAAbR,EAAsB,yBAA2B,yBAA1D,OAC7B,OACI,sBAAK2B,GAAG,YAAR,UACI,8BACI,cAAC,EAAD,CAAqBlC,YAAagC,KAAK1B,WAAYP,YAAakC,MAEnE7B,EAAS+B,MAAM,EAAGlB,GAAWmB,KAAI,WAAoBnD,GAApB,IAAKoD,EAAL,2BAC9B,cAAC,EAAD,aAA8BpD,MAAOA,EAAOC,cAAe,EAAKA,eAAmBmD,GAA5DpD,MAE1BgC,EAAYb,EAASc,OAClB,cAAC,EAAD,CAAqBlB,YAAagC,KAAKhB,YAAajB,YAAY,cAChE,Y,GArEGuC,IAAMC,YCIdC,G,MARH,WACV,OACE,qBAAK5C,UAAU,MAAf,SACE,cAAC,EAAD,QCMS6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d8e043b4.chunk.js","sourcesContent":["import React from 'react';\nimport { getDay, getMonth } from './message.utils';\nimport './message.styles.css';\n\nconst MessageComponent = ({content, senderUuid, sentAt, index, deleteMessage}) => {\n    const d = new Date(sentAt);\n    const sentAtDisplayString = `${getDay(d.getDay())}, ${getMonth(d.getMonth())} ${d.getDate()}, ${d.getFullYear()} at ${d.toString().substring(16)}`;\n    return(\n        <div className='message'>\n            <span className='message-content'>\n            {senderUuid}: {content}<br /> <div className=\"message-details\">{sentAtDisplayString}</div>\n            </span>\n            <span className='delete-button' onClick={() => deleteMessage(index)}>\n                Delete\n            </span>\n        </div>\n    );\n};\n\nexport default MessageComponent;","export const getDay = (index) => {\n    const days = [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n    return days[index];\n}\nexport const getMonth = (index) => {\n    const months = [ 'January','February','March','April','May','June','July','August','September','October','November','December'];\n    return months[index];\n}\n","import React from 'react';\nimport './chat-button.styles.css';\n\nconst ChatButtonComponent = ({displayText, handleClick}) => {\n    return(\n        <span className=\"chat-button\" onClick={() => handleClick()}>\n            {displayText}\n        </span>\n    );\n};\n\nexport default ChatButtonComponent;","import React from 'react';\nimport { chat } from './chat.data.json';\n\nimport MessageComponent from '../../components/message/message.component';\nimport ChatButtonComponent from '../../components/chat-button/chat-button.component';\nimport './chat-page.styles.css';\n\nclass ChatPage extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            chatList: [],\n            isSorted: false,\n            sortType: 'asc',\n            nextEntry: 5\n        }\n    }\n    deleteMessage = (index) => {\n        const newList = this.state.chatList;\n        delete newList[index];\n        this.setState({\n            chatList: newList\n        });\n    }\n    toggleSort = () => {\n        const {sortType, chatList} = this.state;\n\n        const sortedList = chatList.sort((a, b) => {\n            const da = new Date(a.sentAt);\n            const db = new Date(b.sentAt);\n            return sortType === 'desc' ? da.getTime()-db.getTime() : db.getTime()-da.getTime();\n        });\n\n        this.setState({\n            chatList: sortedList,\n            isSorted: true,\n            sortType: sortType === 'desc' ? 'asc' : 'desc'\n        });\n    }\n    addNextPage = () => {\n        const { chatList, nextEntry} = this.state;\n        if( nextEntry < chatList.length){\n            this.setState({\n                nextEntry: nextEntry + 5\n            });\n        }\n    }\n    componentDidMount(){\n        // Dedupe Messages\n        const originalList = chat;\n        const dedupedList = [];\n        const listUniques = new Set();\n        for (const messageObject of originalList) {\n            let msg = JSON.stringify({uuid: messageObject.uuid, content: messageObject.content});\n            if(!listUniques.has(msg)){\n                listUniques.add(msg);\n                dedupedList.push(messageObject);\n            }\n        };\n        this.setState({\n            chatList: dedupedList\n        });\n    }\n    render(){\n        const { chatList, isSorted, sortType, nextEntry } = this.state;\n        const sortText = !isSorted ? 'Sort' : sortType === 'desc' ? 'Sorted by Newest First' : 'Sorted by Oldest First';\n        return(\n            <div id=\"chat-page\">\n                <div>\n                    <ChatButtonComponent handleClick={this.toggleSort} displayText={sortText}/>\n                </div>\n                {chatList.slice(0, nextEntry).map(({...messageProps}, index) => (\n                    <MessageComponent key={index} index={index} deleteMessage={this.deleteMessage} {...messageProps} />\n                ))}\n                {nextEntry < chatList.length ? (\n                    <ChatButtonComponent handleClick={this.addNextPage} displayText=\"Next Page\"/>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default ChatPage;","import ChatPage from './pages/chat-page/chat-page.component';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">  \n      <ChatPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}